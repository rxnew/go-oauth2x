// Code generated by MockGen. DO NOT EDIT.
// Source: golang.org/x/oauth2 (interfaces: TokenSource)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	oauth2 "golang.org/x/oauth2"
)

// MockTokenSource is a mock of TokenSource interface
type MockTokenSource struct {
	ctrl     *gomock.Controller
	recorder *MockTokenSourceMockRecorder
}

// MockTokenSourceMockRecorder is the mock recorder for MockTokenSource
type MockTokenSourceMockRecorder struct {
	mock *MockTokenSource
}

// NewMockTokenSource creates a new mock instance
func NewMockTokenSource(ctrl *gomock.Controller) *MockTokenSource {
	mock := &MockTokenSource{ctrl: ctrl}
	mock.recorder = &MockTokenSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokenSource) EXPECT() *MockTokenSourceMockRecorder {
	return m.recorder
}

// Token mocks base method
func (m *MockTokenSource) Token() (*oauth2.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Token")
	ret0, _ := ret[0].(*oauth2.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Token indicates an expected call of Token
func (mr *MockTokenSourceMockRecorder) Token() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Token", reflect.TypeOf((*MockTokenSource)(nil).Token))
}
